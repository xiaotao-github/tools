<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vcooc.experiment.mapper.LabClockInUserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.vcooc.base.pojo.LabClockInUserInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
    <result column="user_privilege" property="userPrivilege" jdbcType="VARCHAR" />
    <result column="card_enroll_time" property="cardEnrollTime" jdbcType="TIMESTAMP" />
    <result column="face_enroll_time" property="faceEnrollTime" jdbcType="TIMESTAMP" />
    <result column="fp_enroll_time" property="fpEnrollTime" jdbcType="TIMESTAMP" />
    <result column="password_enroll_time" property="passwordEnrollTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.vcooc.base.pojo.LabClockInUserInfoWithBLOBs" extends="BaseResultMap" >
    <result column="enroll_photo" property="enrollPhoto" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp1" property="enrollFp1" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp2" property="enrollFp2" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp3" property="enrollFp3" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp4" property="enrollFp4" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp5" property="enrollFp5" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp6" property="enrollFp6" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp7" property="enrollFp7" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp8" property="enrollFp8" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp9" property="enrollFp9" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp10" property="enrollFp10" jdbcType="LONGVARBINARY" />
    <result column="enroll_password" property="enrollPassword" jdbcType="LONGVARBINARY" />
    <result column="enroll_face" property="enrollFace" jdbcType="LONGVARBINARY" />
    <result column="enroll_card" property="enrollCard" jdbcType="LONGVARBINARY" />
  </resultMap>
  
  <!-- 考勤机录入用户信息Map -->
  <resultMap id="UserInfoMap" type="com.vcooc.experiment.dto.LabClockUserInfoDTO" >
   	<result column="id"  property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="department_id"  property="departmentId" jdbcType="INTEGER" />
    <result column="depart_name" property="departName" jdbcType="VARCHAR" />
    <result column="major_id"  property="majorId" jdbcType="INTEGER" />
    <result column="major_name" property="majorName" jdbcType="VARCHAR" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    
    <result column="enroll_photo" property="enrollPhoto" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp1" property="enrollFp1" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp2" property="enrollFp2" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp3" property="enrollFp3" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp4" property="enrollFp4" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp5" property="enrollFp5" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp6" property="enrollFp6" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp7" property="enrollFp7" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp8" property="enrollFp8" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp9" property="enrollFp9" jdbcType="LONGVARBINARY" />
    <result column="enroll_fp10" property="enrollFp10" jdbcType="LONGVARBINARY" />
    <result column="enroll_password" property="enrollPassword" jdbcType="LONGVARBINARY" />
    <result column="enroll_face" property="enrollFace" jdbcType="LONGVARBINARY" />
    <result column="enroll_card" property="enrollCard" jdbcType="LONGVARBINARY" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, user_id, name, username, type, status, class_id, operator_id, user_privilege, 
    card_enroll_time, face_enroll_time, fp_enroll_time, password_enroll_time, create_time, 
    update_time
  </sql>
  <sql id="Blob_Column_List" >
    enroll_photo, enroll_fp1, enroll_fp2, enroll_fp3, enroll_fp4, enroll_fp5, enroll_fp6, 
    enroll_fp7, enroll_fp8, enroll_fp9, enroll_fp10, enroll_password, enroll_face, enroll_card
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lab_clock_in_user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from lab_clock_in_user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.vcooc.base.pojo.LabClockInUserInfoWithBLOBs" >
    insert into lab_clock_in_user_info (id, user_id, name, 
      username, type, status, 
      class_id, operator_id, user_privilege, 
      card_enroll_time, face_enroll_time, fp_enroll_time, 
      password_enroll_time, create_time, update_time, 
      enroll_photo, enroll_fp1, enroll_fp2, 
      enroll_fp3, enroll_fp4, enroll_fp5, 
      enroll_fp6, enroll_fp7, enroll_fp8, 
      enroll_fp9, enroll_fp10, enroll_password, 
      enroll_face, enroll_card)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{classId,jdbcType=INTEGER}, #{operatorId,jdbcType=INTEGER}, #{userPrivilege,jdbcType=VARCHAR}, 
      #{cardEnrollTime,jdbcType=TIMESTAMP}, #{faceEnrollTime,jdbcType=TIMESTAMP}, #{fpEnrollTime,jdbcType=TIMESTAMP}, 
      #{passwordEnrollTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{enrollPhoto,jdbcType=LONGVARBINARY}, #{enrollFp1,jdbcType=LONGVARBINARY}, #{enrollFp2,jdbcType=LONGVARBINARY}, 
      #{enrollFp3,jdbcType=LONGVARBINARY}, #{enrollFp4,jdbcType=LONGVARBINARY}, #{enrollFp5,jdbcType=LONGVARBINARY}, 
      #{enrollFp6,jdbcType=LONGVARBINARY}, #{enrollFp7,jdbcType=LONGVARBINARY}, #{enrollFp8,jdbcType=LONGVARBINARY}, 
      #{enrollFp9,jdbcType=LONGVARBINARY}, #{enrollFp10,jdbcType=LONGVARBINARY}, #{enrollPassword,jdbcType=LONGVARBINARY}, 
      #{enrollFace,jdbcType=LONGVARBINARY}, #{enrollCard,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.vcooc.base.pojo.LabClockInUserInfoWithBLOBs" >
    insert into lab_clock_in_user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="userPrivilege != null" >
        user_privilege,
      </if>
      <if test="cardEnrollTime != null" >
        card_enroll_time,
      </if>
      <if test="faceEnrollTime != null" >
        face_enroll_time,
      </if>
      <if test="fpEnrollTime != null" >
        fp_enroll_time,
      </if>
      <if test="passwordEnrollTime != null" >
        password_enroll_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="enrollPhoto != null" >
        enroll_photo,
      </if>
      <if test="enrollFp1 != null" >
        enroll_fp1,
      </if>
      <if test="enrollFp2 != null" >
        enroll_fp2,
      </if>
      <if test="enrollFp3 != null" >
        enroll_fp3,
      </if>
      <if test="enrollFp4 != null" >
        enroll_fp4,
      </if>
      <if test="enrollFp5 != null" >
        enroll_fp5,
      </if>
      <if test="enrollFp6 != null" >
        enroll_fp6,
      </if>
      <if test="enrollFp7 != null" >
        enroll_fp7,
      </if>
      <if test="enrollFp8 != null" >
        enroll_fp8,
      </if>
      <if test="enrollFp9 != null" >
        enroll_fp9,
      </if>
      <if test="enrollFp10 != null" >
        enroll_fp10,
      </if>
      <if test="enrollPassword != null" >
        enroll_password,
      </if>
      <if test="enrollFace != null" >
        enroll_face,
      </if>
      <if test="enrollCard != null" >
        enroll_card,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="userPrivilege != null" >
        #{userPrivilege,jdbcType=VARCHAR},
      </if>
      <if test="cardEnrollTime != null" >
        #{cardEnrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="faceEnrollTime != null" >
        #{faceEnrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fpEnrollTime != null" >
        #{fpEnrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordEnrollTime != null" >
        #{passwordEnrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enrollPhoto != null" >
        #{enrollPhoto,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp1 != null" >
        #{enrollFp1,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp2 != null" >
        #{enrollFp2,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp3 != null" >
        #{enrollFp3,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp4 != null" >
        #{enrollFp4,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp5 != null" >
        #{enrollFp5,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp6 != null" >
        #{enrollFp6,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp7 != null" >
        #{enrollFp7,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp8 != null" >
        #{enrollFp8,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp9 != null" >
        #{enrollFp9,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp10 != null" >
        #{enrollFp10,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollPassword != null" >
        #{enrollPassword,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFace != null" >
        #{enrollFace,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollCard != null" >
        #{enrollCard,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vcooc.base.pojo.LabClockInUserInfoWithBLOBs" >
    update lab_clock_in_user_info
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="userPrivilege != null" >
        user_privilege = #{userPrivilege,jdbcType=VARCHAR},
      </if>
      <if test="cardEnrollTime != null" >
        card_enroll_time = #{cardEnrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="faceEnrollTime != null" >
        face_enroll_time = #{faceEnrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fpEnrollTime != null" >
        fp_enroll_time = #{fpEnrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordEnrollTime != null" >
        password_enroll_time = #{passwordEnrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enrollPhoto != null" >
        enroll_photo = #{enrollPhoto,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp1 != null" >
        enroll_fp1 = #{enrollFp1,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp2 != null" >
        enroll_fp2 = #{enrollFp2,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp3 != null" >
        enroll_fp3 = #{enrollFp3,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp4 != null" >
        enroll_fp4 = #{enrollFp4,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp5 != null" >
        enroll_fp5 = #{enrollFp5,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp6 != null" >
        enroll_fp6 = #{enrollFp6,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp7 != null" >
        enroll_fp7 = #{enrollFp7,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp8 != null" >
        enroll_fp8 = #{enrollFp8,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp9 != null" >
        enroll_fp9 = #{enrollFp9,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFp10 != null" >
        enroll_fp10 = #{enrollFp10,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollPassword != null" >
        enroll_password = #{enrollPassword,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollFace != null" >
        enroll_face = #{enrollFace,jdbcType=LONGVARBINARY},
      </if>
      <if test="enrollCard != null" >
        enroll_card = #{enrollCard,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.vcooc.base.pojo.LabClockInUserInfoWithBLOBs" >
    update lab_clock_in_user_info
    set user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      class_id = #{classId,jdbcType=INTEGER},
      operator_id = #{operatorId,jdbcType=INTEGER},
      user_privilege = #{userPrivilege,jdbcType=VARCHAR},
      card_enroll_time = #{cardEnrollTime,jdbcType=TIMESTAMP},
      face_enroll_time = #{faceEnrollTime,jdbcType=TIMESTAMP},
      fp_enroll_time = #{fpEnrollTime,jdbcType=TIMESTAMP},
      password_enroll_time = #{passwordEnrollTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      enroll_photo = #{enrollPhoto,jdbcType=LONGVARBINARY},
      enroll_fp1 = #{enrollFp1,jdbcType=LONGVARBINARY},
      enroll_fp2 = #{enrollFp2,jdbcType=LONGVARBINARY},
      enroll_fp3 = #{enrollFp3,jdbcType=LONGVARBINARY},
      enroll_fp4 = #{enrollFp4,jdbcType=LONGVARBINARY},
      enroll_fp5 = #{enrollFp5,jdbcType=LONGVARBINARY},
      enroll_fp6 = #{enrollFp6,jdbcType=LONGVARBINARY},
      enroll_fp7 = #{enrollFp7,jdbcType=LONGVARBINARY},
      enroll_fp8 = #{enrollFp8,jdbcType=LONGVARBINARY},
      enroll_fp9 = #{enrollFp9,jdbcType=LONGVARBINARY},
      enroll_fp10 = #{enrollFp10,jdbcType=LONGVARBINARY},
      enroll_password = #{enrollPassword,jdbcType=LONGVARBINARY},
      enroll_face = #{enrollFace,jdbcType=LONGVARBINARY},
      enroll_card = #{enrollCard,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vcooc.base.pojo.LabClockInUserInfo" >
    update lab_clock_in_user_info
    set user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      class_id = #{classId,jdbcType=INTEGER},
      operator_id = #{operatorId,jdbcType=INTEGER},
      user_privilege = #{userPrivilege,jdbcType=VARCHAR},
      card_enroll_time = #{cardEnrollTime,jdbcType=TIMESTAMP},
      face_enroll_time = #{faceEnrollTime,jdbcType=TIMESTAMP},
      fp_enroll_time = #{fpEnrollTime,jdbcType=TIMESTAMP},
      password_enroll_time = #{passwordEnrollTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  	<insert id="batchInsert" parameterType="map">
		INSERT INTO `lab_clock_in_user_info` (
			`user_id`,
			`name`,
			`user_privilege`,
			`create_time`,
			`type`,
			`class_id`,
			operator_id,
			username
		)
		VALUES
		<foreach collection="list" item="item"  separator="," index="index">
	   	  (	#{item.userId}, #{item.name},'USER',NOW(),#{item.type},#{item.classId},#{operatorId},#{item.username} )
		</foreach>
   		ON DUPLICATE KEY UPDATE `user_id` =VALUES(`user_id`)
   	</insert>
   	
   	<select id="selectByClassIdList" parameterType="map" resultMap="BaseResultMap">
   			SELECT
			si.name, si.id AS user_id ,u.type,u.username,si.tb_class_id AS class_id
		FROM
			`user` AS u
		INNER JOIN student_info AS si ON  u.id = si.id
		WHERE	si.tb_class_id IN  
		<foreach collection="classIdList" item="classId" index="index" open="(" close=")" separator=",">
             #{classId}
        </foreach>
		AND NOT EXISTS (
			SELECT
				cui.user_id
			FROM
				lab_clock_in_user_info AS  cui
			WHERE
				u.id =cui.user_id
		)	
   	</select>
   	<select id="selectCountByDepartmentId" resultType="int">
   		SELECT 
   		COUNT(*)
   		FROM department AS d
				INNER JOIN  major AS m
				ON d.id =m.department_id
				INNER JOIN  grade AS g
				ON m.id =g.major_id
				INNER JOIN tb_class AS tc
				ON g.id =tc.grade_id
				INNER JOIN lab_clock_in_user_info AS  cui
				ON tc.id =cui.class_id
				INNER JOIN student_info AS si
				ON  cui.user_id  =si.id
				INNER JOIN `user` AS u
				ON u.id =si.id
				WHERE  
		<if test="departmentId!=null">
			d.id =#{departmentId} AND 
		</if>
		d.stealth=2  AND m.stealth =2 AND g.stealth =2 AND tc.stealth =2
		AND cui.`status`=1
   	</select>
   	<select id="selectByDepartmentId" resultMap="UserInfoMap" parameterType="int">
		<choose>
			<when test="sSearch!=null and sSearch!=''">
				SELECT 
					si.`name`,
					si.id,
					u.username,
					case when cui.type=2  THEN '学生' ELSE '老师' END  AS 	type,
				
					d.id AS department_id,
					d. NAME AS depart_name,
					m.id AS major_id,
					m.`name` AS major_name,
					g.id AS grade_id,
					g.`name` AS grade_name,
					tc.id AS class_id,
					tc.`name` AS class_name,
					cui.user_privilege,
					cui.enroll_photo,
					case when ISNULL(enroll_fp1) then NULL else '√' end  AS enroll_fp1,
					case when ISNULL(enroll_fp2) then NULL else '√' end  AS enroll_fp2,
					case when ISNULL(enroll_fp3) then NULL else '√' end  AS enroll_fp3,
					case when ISNULL(cui.enroll_password) then NULL else '√' end  AS enroll_password,
					case when ISNULL(enroll_face) then NULL else '√' end  AS enroll_face,
					case when ISNULL(enroll_card) then NULL else '√' end  AS enroll_card,
					DATE_FORMAT(cui.create_time,   '%Y-%m-%d %H:%i:%S') AS create_time,
					DATE_FORMAT(cui.update_time,   '%Y-%m-%d %H:%i:%S') AS update_time,
					cui.operator_id 
				FROM department AS d
				INNER JOIN  major AS m
				ON d.id =m.department_id
				INNER JOIN  grade AS g
				ON m.id =g.major_id
				INNER JOIN tb_class AS tc
				ON g.id =tc.grade_id
				INNER JOIN lab_clock_in_user_info AS  cui
				ON tc.id =cui.class_id
				INNER JOIN student_info AS si
				ON  cui.user_id  =si.id
				INNER JOIN `user` AS u
				ON u.id =si.id
				WHERE  
				<if test="departmentId!=null">
					d.id =#{departmentId} AND 
				</if>
				d.stealth=2  AND m.stealth =2 AND g.stealth =2 AND tc.stealth =2
				AND cui.`status`=1
				AND
				(
				
				d. NAME LIKE CONCAT(CONCAT('%',#{sSearch}),'%')
				OR m.`name` LIKE CONCAT(CONCAT('%',#{sSearch}),'%')
				OR g.`name` LIKE CONCAT(CONCAT('%',#{sSearch}),'%')
				OR tc.`name` LIKE CONCAT(CONCAT('%',#{sSearch}),'%')
				OR si.`name` LIKE CONCAT(CONCAT('%',#{sSearch}),'%')
				OR u.username LIKE CONCAT(CONCAT('%',#{sSearch}),'%')
				
				)
				ORDER BY  cui.create_time DESC
				limit #{iDisplayStart},#{iDisplayLength}
				
			</when>
			<otherwise>
				SELECT 
					si.`name`,
					si.id,
					u.username,
					case when cui.type=2  THEN '学生' ELSE '老师' END  AS 	type,
				
					d.id AS department_id,
					d. NAME AS depart_name,
					m.id AS major_id,
					m.`name` AS major_name,
					g.id AS grade_id,
					g.`name` AS grade_name,
					tc.id AS class_id,
					tc.`name` AS class_name,
					cui.user_privilege,
					cui.enroll_photo,
					case when ISNULL(enroll_fp1) then NULL else '√' end  AS enroll_fp1,
					
					case when ISNULL(enroll_fp2) then NULL else '√' end  AS enroll_fp2,
					case when ISNULL(enroll_fp3) then NULL else '√' end  AS enroll_fp3,
					<!-- 
					case when ISNULL(enroll_fp4) then NULL else '√' end  AS enroll_fp4,
					case when ISNULL(enroll_fp5) then NULL else '√' end  AS enroll_fp5,
					case when ISNULL(enroll_fp6) then NULL else '√' end  AS enroll_fp6,
					case when ISNULL(enroll_fp7) then NULL else '√' end  AS enroll_fp7,
					case when ISNULL(enroll_fp8) then NULL else '√' end  AS enroll_fp8,
					case when ISNULL(enroll_fp9) then NULL else '√' end  AS enroll_fp9,
					case when ISNULL(enroll_fp10) then NULL else '√' end  AS enroll_fp10,
					-->
					case when ISNULL(cui.enroll_password) then NULL else '√' end  AS enroll_password,
					case when ISNULL(enroll_face) then NULL else '√' end  AS enroll_face,
					case when ISNULL(enroll_card) then NULL else '√' end  AS enroll_card,
					DATE_FORMAT(cui.create_time,   '%Y-%m-%d %H:%i:%S') AS create_time,
					DATE_FORMAT(cui.update_time,   '%Y-%m-%d %H:%i:%S') AS update_time,
					cui.operator_id 
				FROM department AS d
				INNER JOIN  major AS m
				ON d.id =m.department_id
				INNER JOIN  grade AS g
				ON m.id =g.major_id
				INNER JOIN tb_class AS tc
				ON g.id =tc.grade_id
				INNER JOIN lab_clock_in_user_info AS  cui
				ON tc.id =cui.class_id
				INNER JOIN student_info AS si
				ON  cui.user_id  =si.id
				INNER JOIN `user` AS u
				ON u.id =si.id
				WHERE  
				<if test="departmentId!=null">
					d.id =#{departmentId} AND 
				</if>
				d.stealth=2  AND m.stealth =2 AND g.stealth =2 AND tc.stealth =2
				AND cui.`status`=1
				ORDER BY  cui.create_time DESC
				limit #{iDisplayStart},#{iDisplayLength}
			</otherwise>
		</choose>
   	</select>
   	
</mapper>