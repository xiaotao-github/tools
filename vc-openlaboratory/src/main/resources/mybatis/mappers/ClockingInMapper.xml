<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vcooc.experiment.mapper.ClockingInMapper">
	
	<!-- 批量班级下所有学生插入考勤信息或者小组成员考勤 -->
	 <insert id="addClockInForClassOrGroup">
			      INSERT INTO `clocking_in` (
			`schedule_id`,
			<choose>
			      <when test="record.classId!=null">
			             `class_id`,
			      </when>
			      <otherwise>
			          `group_id`,
			      </otherwise>
			</choose>
			`student_id`,
			`status`,
			`create_time`,
			`update_time`
		)
		VALUES
		<choose>
		     <when test="record.classId!=null">
			       <foreach collection="list" item="id" separator=",">
				          	(
						#{record.scheduleId},
						#{record.classId},
						#{id},
						#{record.status},
						#{record.createTime},
						#{record.updateTime}
					)
			       </foreach>
		     </when>
		     <otherwise>
			         <foreach collection="list" item="id" separator=",">
				       (
						#{record.scheduleId},
						#{record.groupId},
						#{id},
						#{record.status},
						#{record.createTime},
						#{record.updateTime}
					)
		        	</foreach>
		     </otherwise>
		</choose>
	</insert>
		<!-- 插入学生考勤 -->
		 <insert id="addClockInForStudent" parameterType="ClockingIn">
			      INSERT INTO `clocking_in` (
				`schedule_id`,
				`student_id`,
				`class_id`,
				`status`,
				`create_time`,
				`update_time`
		)
		VALUES
		          	(
				#{record.scheduleId},
				#{record.studentId},
			    #{record.classId},
				#{record.status},
				#{record.createTime},
				#{record.updateTime}
			)
	</insert>
	
	
	<!-- 查询课程表下已经录入的学生id -->
	<select id="selectStudentIdsByScheduleId" parameterType="int" resultType="int">
	          select student_id     from clocking_in where schedule_id=#{scheduleId}
	</select>
	
	<!-- 查询学生id以及排课id查询学生是否已录入考勤信息 -->
	<select id="selectClockingIdByStudentIdAndScheduleId" resultType="int">
	     select count(clocking_id) from clocking_in
	     where student_id=#{studentId} and schedule_id=#{scheduleId}
	</select>
	
	<delete id="deleteClockingIn">
		DELETE FROM clocking_in WHERE schedule_id=#{scheduleId} AND student_id IN (${studentIds})
	</delete>
</mapper>